{"version":3,"sources":["reportWebVitals.js","api/covid19api.ts","data/countryPopulations.ts","store/countries/countries.slice.ts","store/countryDays/countryDays.slice.ts","store/sectors/sectors.slice.ts","store/selection/selection.slice.ts","store/root-reducer.ts","store/store.ts","colors.tsx","createDataSet.ts","components/Chart.tsx","components/Charts.tsx","components/SelectBar.tsx","components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","getCountryDays","slug","Axios","get","countryPopulations","fetchCountries","createAsyncThunk","a","data","slice","createSlice","name","initialState","countries","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","map","dto","Country","isoCode","ISO2","Slug","population","rejected","countriesReducer","reducer","actions","fetchCountryDays","dtos","dayOneCountryDtoAdapter","totalCases","Confirmed","totalDeaths","Deaths","dateTime","Date","newCases","newDeaths","days","length","withNews","_","pair","current","prev","countryDaysAdapter","countryDaysReducer","setSectors","reduce","st","sector","id","sectorsReducer","sectorIds","comparisonMode","normalize","rangeFrom","moment","toISOString","rangeTo","selectSectors","selectComparisonMode","selectNormalize","selectRange","start","end","selectionReducer","rootReducer","combineReducers","countryDays","selection","sectors","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","colors","cases","deaths","emptyDataPoint","t","rollingCases","undefined","rollingDeaths","toDataPoints","roll","normalizeBy","dataPoints","d","daysByDate","Map","dates","sortBy","Array","from","keys","m","valueOf","i","currentDay","rollingDates","Math","max","floor","ceil","rolling","f","xs","rollingValues","filter","x","isFinite","b","rollingDefined","CoronaChart","props","chartReference","React","createRef","labels","this","datasets","dataset","label","title","fill","lineTension","backgroundColor","borderColor","color","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","values","options","text","display","Component","extendMoment","Moment","connector","connect","countriesState","countryDaysState","selectionState","sectorsState","dispatch","toDateString","format","dateRange","DateRange","by","sectorId","dataPoint","createDataCharts","dvs","dv","allCharts","createAllDataCharts","numberOfCharts","min","s","Paper","elevation","toLocaleString","dc","flat","sectorsActions","selectionActions","range","getCurrentRange","flatMap","notLoadedCountry","find","country","setTimeout","loadCountriesDays","prevProps","c","createSectors","loadSectors","Object","utils","MomentUtils","AppBar","position","Toolbar","Box","mr","FormControl","InputLabel","Select","style","minWidth","multiple","labelId","value","selectedSectorValue","onChange","e","target","sectorsValues","MenuItem","FormControlLabel","control","Checkbox","disabled","checked","disableToolbar","variant","margin","toDate","date","currentRange","Container","maxWidth","SelectBar","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e9bc42.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Axios, { AxiosResponse } from 'axios';\nimport { CountryDto, DayOneCountryDto } from './dto';\n\nconst baseUrl = \"https://api.covid19api.com\"\n\nexport const getCountries: () => Promise<AxiosResponse<CountryDto[]>> = () => {\n    return Axios.get(`${baseUrl}/countries`)\n};\n\nexport const getCountryDays: (slug: string) => Promise<AxiosResponse<DayOneCountryDto[]>> = (slug: string) => Axios.get(`${baseUrl}/total/dayone/country/${slug}`);","export interface CountryPopulation {\n    size: number,\n    population: number\n}\n\nexport const countryPopulations: {[index:string]: CountryPopulation} = \n{\n    \"AF\": {\n        \"size\": 645807,\n        \"population\": 38928346\n    },\n    \"AX\": {\n        \"size\": 1580,\n        \"population\": 29789\n    },\n    \"AL\": {\n        \"size\": 28748,\n        \"population\": 2877797\n    },\n    \"DZ\": {\n        \"size\": 2381741,\n        \"population\": 43851044\n    },\n    \"AS\": {\n        \"size\": 197,\n        \"population\": 55191\n    },\n    \"AD\": {\n        \"size\": 464,\n        \"population\": 77265\n    },\n    \"AO\": {\n        \"size\": 1246700,\n        \"population\": 31787566\n    },\n    \"AI\": {\n        \"size\": 96,\n        \"population\": 14906\n    },\n    \"AQ\": {\n        \"size\": 13209000,\n        \"population\": 2700\n    },\n    \"AG\": {\n        \"size\": 442,\n        \"population\": 93659\n    },\n    \"AR\": {\n        \"size\": 2777409,\n        \"population\": 44272125\n    },\n    \"AM\": {\n        \"size\": 29743,\n        \"population\": 2936706\n    },\n    \"AW\": {\n        \"size\": 193,\n        \"population\": 104588\n    },\n    \"AU\": {\n        \"size\": 7682557,\n        \"population\": 24641662\n    },\n    \"AT\": {\n        \"size\": 83858,\n        \"population\": 8592400\n    },\n    \"AZ\": {\n        \"size\": 86530,\n        \"population\": 9923914\n    },\n    \"BS\": {\n        \"size\": 13962,\n        \"population\": 397164\n    },\n    \"BH\": {\n        \"size\": 694,\n        \"population\": 1637896\n    },\n    \"BD\": {\n        \"size\": 142615,\n        \"population\": 168065920\n    },\n    \"BB\": {\n        \"size\": 431,\n        \"population\": 289680\n    },\n    \"BY\": {\n        \"size\": 207600,\n        \"population\": 9608058\n    },\n    \"BE\": {\n        \"size\": 30518,\n        \"population\": 10449361\n    },\n    \"BZ\": {\n        \"size\": 22966,\n        \"population\": 340844\n    },\n    \"BJ\": {\n        \"size\": 112622,\n        \"population\": 11801595\n    },\n    \"BM\": {\n        \"size\": 53,\n        \"population\": 69839\n    },\n    \"BT\": {\n        \"size\": 46650,\n        \"population\": 817054\n    },\n    \"BO\": {\n        \"size\": 1098581,\n        \"population\": 10969646\n    },\n    \"BA\": {\n        \"size\": 51129,\n        \"population\": 3871643\n    },\n    \"BW\": {\n        \"size\": 581730,\n        \"population\": 2374636\n    },\n    \"BV\": {\n        \"size\": 49,\n        \"population\": 0\n    },\n    \"BR\": {\n        \"size\": 8544418,\n        \"population\": 212392717\n    },\n    \"VG\": {\n        \"size\": 151,\n        \"population\": 32206\n    },\n    \"BN\": {\n        \"size\": 5765,\n        \"population\": 434076\n    },\n    \"BG\": {\n        \"size\": 110994,\n        \"population\": 6924716\n    },\n    \"BF\": {\n        \"size\": 267950,\n        \"population\": 20321560\n    },\n    \"BI\": {\n        \"size\": 27834,\n        \"population\": 11575964\n    },\n    \"CV\": {\n        \"size\": 4033,\n        \"population\": 8000\n    },\n    \"KH\": {\n        \"size\": 181035,\n        \"population\": 16245729\n    },\n    \"CM\": {\n        \"size\": 475442,\n        \"population\": 25312993\n    },\n    \"CA\": {\n        \"size\": 9976137,\n        \"population\": 37742154\n    },\n    \"KY\": {\n        \"size\": 259,\n        \"population\": 56092\n    },\n    \"CF\": {\n        \"size\": 622436,\n        \"population\": 4825711\n    },\n    \"TD\": {\n        \"size\": 1284000,\n        \"population\": 15814345\n    },\n    \"CL\": {\n        \"size\": 755482,\n        \"population\": 17508260\n    },\n    \"CN\": {\n        \"size\": 9806391,\n        \"population\": 1439323776\n    },\n    \"CX\": {\n        \"size\": 135,\n        \"population\": 1502\n    },\n    \"CC\": {\n        \"size\": 14,\n        \"population\": 550\n    },\n    \"CO\": {\n        \"size\": 1141748,\n        \"population\": 49464683\n    },\n    \"KM\": {\n        \"size\": 1862,\n        \"population\": 850910\n    },\n    \"CG\": {\n        \"size\": 342000,\n        \"population\": 5542197\n    },\n    \"CD\": {\n        \"size\": 2344798,\n        \"population\": 86727573\n    },\n    \"CK\": {\n        \"size\": 237,\n        \"population\": 12400\n    },\n    \"CR\": {\n        \"size\": 51090,\n        \"population\": 4755234\n    },\n    \"CI\": {\n        \"size\": 322461,\n        \"population\": 25531083\n    },\n    \"HR\": {\n        \"size\": 56542,\n        \"population\": 4470534\n    },\n    \"CU\": {\n        \"size\": 114525,\n        \"population\": 11047251\n    },\n    \"CW\": {\n        \"size\": 444,\n        \"population\": 147695\n    },\n    \"CY\": {\n        \"size\": 9251,\n        \"population\": 1172458\n    },\n    \"CZ\": {\n        \"size\": 78866,\n        \"population\": 10627448\n    },\n    \"DK\": {\n        \"size\": 43093,\n        \"population\": 5569077\n    },\n    \"DJ\": {\n        \"size\": 23200,\n        \"population\": 985690\n    },\n    \"DM\": {\n        \"size\": 751,\n        \"population\": 73449\n    },\n    \"DO\": {\n        \"size\": 48734,\n        \"population\": 10349741\n    },\n    \"TP\": {\n        \"size\": 14604,\n        \"population\": 1201542\n    },\n    \"EC\": {\n        \"size\": 272046,\n        \"population\": 15654411\n    },\n    \"EG\": {\n        \"size\": 1001450,\n        \"population\": 101168745\n    },\n    \"SV\": {\n        \"size\": 21041,\n        \"population\": 6125512\n    },\n    \"GQ\": {\n        \"size\": 28051,\n        \"population\": 1360104\n    },\n    \"ER\": {\n        \"size\": 121100,\n        \"population\": 5309659\n    },\n    \"EE\": {\n        \"size\": 45226,\n        \"population\": 1257921\n    },\n    \"ET\": {\n        \"size\": 1127127,\n        \"population\": 110135635\n    },\n    \"FK\": {\n        \"size\": 16076,\n        \"population\": 2932\n    },\n    \"FO\": {\n        \"size\": 1414,\n        \"population\": 49947\n    },\n    \"FJ\": {\n        \"size\": 18274,\n        \"population\": 903207\n    },\n    \"FI\": {\n        \"size\": 338145,\n        \"population\": 5268799\n    },\n    \"FR\": {\n        \"size\": 547030,\n        \"population\": 65233271\n    },\n    \"GF\": {\n        \"size\": 83534,\n        \"population\": 253511\n    },\n    \"PF\": {\n        \"size\": 3894,\n        \"population\": 280026\n    },\n    \"TF\": {\n        \"size\": 7781,\n        \"population\": 120\n    },\n    \"GA\": {\n        \"size\": 267667,\n        \"population\": 2109099\n    },\n    \"GM\": {\n        \"size\": 10689,\n        \"population\": 2228075\n    },\n    \"GE\": {\n        \"size\": 69700,\n        \"population\": 4931226\n    },\n    \"DE\": {\n        \"size\": 357021,\n        \"population\": 82293457\n    },\n    \"GH\": {\n        \"size\": 238538,\n        \"population\": 30096970\n    },\n    \"GI\": {\n        \"size\": 7,\n        \"population\": 29185\n    },\n    \"GR\": {\n        \"size\": 131957,\n        \"population\": 10775557\n    },\n    \"GL\": {\n        \"size\": 2175600,\n        \"population\": 57728\n    },\n    \"GD\": {\n        \"size\": 345,\n        \"population\": 110152\n    },\n    \"GU\": {\n        \"size\": 545,\n        \"population\": 161001\n    },\n    \"GT\": {\n        \"size\": 108894,\n        \"population\": 14647083\n    },\n    \"GG\": {\n        \"size\": 91,\n        \"population\": 65849\n    },\n    \"GN\": {\n        \"size\": 245857,\n        \"population\": 13398180\n    },\n    \"GW\": {\n        \"size\": 36123,\n        \"population\": 1953723\n    },\n    \"GP\": {\n        \"size\": 28051,\n        \"population\": 1360104\n    },\n    \"GY\": {\n        \"size\": 215083,\n        \"population\": 735554\n    },\n    \"HT\": {\n        \"size\": 27748,\n        \"population\": 9996731\n    },\n    \"HN\": {\n        \"size\": 112088,\n        \"population\": 8598561\n    },\n    \"HK\": {\n        \"size\": 1085,\n        \"population\": 7141106\n    },\n    \"HU\": {\n        \"size\": 92966,\n        \"population\": 9919128\n    },\n    \"IS\": {\n        \"size\": 102928,\n        \"population\": 317351\n    },\n    \"IN\": {\n        \"size\": 3166944,\n        \"population\": 1380004385\n    },\n    \"ID\": {\n        \"size\": 1904443,\n        \"population\": 273523615\n    },\n    \"IR\": {\n        \"size\": 1648195,\n        \"population\": 82503583\n    },\n    \"IQ\": {\n        \"size\": 434128,\n        \"population\": 40412299\n    },\n    \"IE\": {\n        \"size\": 70273,\n        \"population\": 4832765\n    },\n    \"IL\": {\n        \"size\": 20991,\n        \"population\": 8583916\n    },\n    \"IT\": {\n        \"size\": 301323,\n        \"population\": 59290969\n    },\n    \"JM\": {\n        \"size\": 10991,\n        \"population\": 2930050\n    },\n    \"JP\": {\n        \"size\": 377812,\n        \"population\": 127185332\n    },\n    \"JE\": {\n        \"size\": 116,\n        \"population\": 96513\n    },\n    \"JO\": {\n        \"size\": 89342,\n        \"population\": 10069794\n    },\n    \"KZ\": {\n        \"size\": 2715900,\n        \"population\": 18157122\n    },\n    \"KE\": {\n        \"size\": 581787,\n        \"population\": 52214791\n    },\n    \"KI\": {\n        \"size\": 832,\n        \"population\": 104488\n    },\n    \"KP\": {\n        \"size\": 122762,\n        \"population\": 24983205\n    },\n    \"KR\": {\n        \"size\": 99268,\n        \"population\": 49115196\n    },\n    \"KV\": {\n        \"size\": 10908,\n        \"population\": 1859203\n    },\n    \"KW\": {\n        \"size\": 17818,\n        \"population\": 4248974\n    },\n    \"KG\": {\n        \"size\": 199900,\n        \"population\": 5664939\n    },\n    \"LA\": {\n        \"size\": 236800,\n        \"population\": 6911544\n    },\n    \"LV\": {\n        \"size\": 64598,\n        \"population\": 2165165\n    },\n    \"LB\": {\n        \"size\": 10452,\n        \"population\": 6065922\n    },\n    \"LS\": {\n        \"size\": 30355,\n        \"population\": 2292682\n    },\n    \"LR\": {\n        \"size\": 99065,\n        \"population\": 4977720\n    },\n    \"LY\": {\n        \"size\": 1777060,\n        \"population\": 6569864\n    },\n    \"LI\": {\n        \"size\": 160,\n        \"population\": 37313\n    },\n    \"LT\": {\n        \"size\": 65300,\n        \"population\": 2904391\n    },\n    \"LU\": {\n        \"size\": 2586,\n        \"population\": 520672\n    },\n    \"MO\": {\n        \"size\": 25,\n        \"population\": 592731\n    },\n    \"MK\": {\n        \"size\": 25433,\n        \"population\": 2091719\n    },\n    \"MG\": {\n        \"size\": 587041,\n        \"population\": 26969642\n    },\n    \"MW\": {\n        \"size\": 118480,\n        \"population\": 19718743\n    },\n    \"MY\": {\n        \"size\": 329758,\n        \"population\": 30513848\n    },\n    \"MV\": {\n        \"size\": 298,\n        \"population\": 393253\n    },\n    \"ML\": {\n        \"size\": 1240198,\n        \"population\": 19689140\n    },\n    \"MT\": {\n        \"size\": 315,\n        \"population\": 412655\n    },\n    \"IM\": {\n        \"size\": 572,\n        \"population\": 86866\n    },\n    \"MH\": {\n        \"size\": 181,\n        \"population\": 70983\n    },\n    \"MQ\": {\n        \"size\": 1128,\n        \"population\": 410508\n    },\n    \"MR\": {\n        \"size\": 1035000,\n        \"population\": 4661149\n    },\n    \"MU\": {\n        \"size\": 2040,\n        \"population\": 1271368\n    },\n    \"YT\": {\n        \"size\": 373,\n        \"population\": 266380\n    },\n    \"MX\": {\n        \"size\": 1967138,\n        \"population\": 130759074\n    },\n    \"FM\": {\n        \"size\": 721,\n        \"population\": 105681\n    },\n    \"MD\": {\n        \"size\": 33843,\n        \"population\": 3583288\n    },\n    \"MC\": {\n        \"size\": 2,\n        \"population\": 30508\n    },\n    \"MN\": {\n        \"size\": 1564160,\n        \"population\": 2992908\n    },\n    \"CS\": {\n        \"size\": 14026,\n        \"population\": 650036\n    },\n    \"MS\": {\n        \"size\": 102,\n        \"population\": 5215\n    },\n    \"MA\": {\n        \"size\": 6600000,\n        \"population\": 36635156\n    },\n    \"MZ\": {\n        \"size\": 799380,\n        \"population\": 31408823\n    },\n    \"MM\": {\n        \"size\": 676577,\n        \"population\": 56320206\n    },\n    \"NA\": {\n        \"size\": 825112,\n        \"population\": 2641996\n    },\n    \"NR\": {\n        \"size\": 21,\n        \"population\": 9488\n    },\n    \"NP\": {\n        \"size\": 147181,\n        \"population\": 31551305\n    },\n    \"NL\": {\n        \"size\": 41526,\n        \"population\": 16877351\n    },\n    \"AN\": {\n        \"size\": 800,\n        \"population\": 100\n    },\n    \"NC\": {\n        \"size\": 18736,\n        \"population\": 267840\n    },\n    \"NZ\": {\n        \"size\": 270534,\n        \"population\": 4401916\n    },\n    \"NI\": {\n        \"size\": 129454,\n        \"population\": 5848641\n    },\n    \"NE\": {\n        \"size\": 1186408,\n        \"population\": 23176691\n    },\n    \"NG\": {\n        \"size\": 923768,\n        \"population\": 200962417\n    },\n    \"NU\": {\n        \"size\": 259,\n        \"population\": 1190\n    },\n    \"NF\": {\n        \"size\": 35,\n        \"population\": 2210\n    },\n    \"MP\": {\n        \"size\": 477,\n        \"population\": 51483\n    },\n    \"NO\": {\n        \"size\": 323759,\n        \"population\": 5147792\n    },\n    \"OM\": {\n        \"size\": 309500,\n        \"population\": 5001875\n    },\n    \"PK\": {\n        \"size\": 880254,\n        \"population\": 200813818\n    },\n    \"PW\": {\n        \"size\": 491,\n        \"population\": 21186\n    },\n    \"PS\": {\n        \"size\": 6242,\n        \"population\": 5186790\n    },\n    \"PA\": {\n        \"size\": 77082,\n        \"population\": 3608431\n    },\n    \"PG\": {\n        \"size\": 462840,\n        \"population\": 6552730\n    },\n    \"PY\": {\n        \"size\": 406752,\n        \"population\": 6703860\n    },\n    \"PE\": {\n        \"size\": 1285216,\n        \"population\": 30147935\n    },\n    \"PH\": {\n        \"size\": 300000,\n        \"population\": 106512074\n    },\n    \"PN\": {\n        \"size\": 47,\n        \"population\": 54\n    },\n    \"PL\": {\n        \"size\": 312685,\n        \"population\": 38346279\n    },\n    \"PT\": {\n        \"size\": 92391,\n        \"population\": 10813834\n    },\n    \"PR\": {\n        \"size\": 9104,\n        \"population\": 3620897\n    },\n    \"QA\": {\n        \"size\": 11521,\n        \"population\": 2743901\n    },\n    \"RE\": {\n        \"size\": 2547,\n        \"population\": 889918\n    },\n    \"RO\": {\n        \"size\": 238391,\n        \"population\": 21729871\n    },\n    \"RU\": {\n        \"size\": 16894741,\n        \"population\": 143964709\n    },\n    \"RW\": {\n        \"size\": 26338,\n        \"population\": 12794412\n    },\n    \"EH\": {\n        \"size\": 266000,\n        \"population\": 582478\n    },\n    \"BL\": {\n        \"size\": 21,\n        \"population\": 7267\n    },\n    \"SH\": {\n        \"size\": 410,\n        \"population\": 4096\n    },\n    \"KN\": {\n        \"size\": 267,\n        \"population\": 51538\n    },\n    \"LC\": {\n        \"size\": 616,\n        \"population\": 163362\n    },\n    \"MF\": {\n        \"size\": 37,\n        \"population\": 31530\n    },\n    \"PM\": {\n        \"size\": 242,\n        \"population\": 5716\n    },\n    \"VC\": {\n        \"size\": 392,\n        \"population\": 102918\n    },\n    \"WS\": {\n        \"size\": 2785,\n        \"population\": 196628\n    },\n    \"SM\": {\n        \"size\": 61,\n        \"population\": 32742\n    },\n    \"ST\": {\n        \"size\": 1001,\n        \"population\": 213379\n    },\n    \"SA\": {\n        \"size\": 2149690,\n        \"population\": 34140662\n    },\n    \"SN\": {\n        \"size\": 196722,\n        \"population\": 16743859\n    },\n    \"RS\": {\n        \"size\": 77474,\n        \"population\": 7209764\n    },\n    \"SC\": {\n        \"size\": 455,\n        \"population\": 95702\n    },\n    \"SL\": {\n        \"size\": 71740,\n        \"population\": 7883123\n    },\n    \"SG\": {\n        \"size\": 683,\n        \"population\": 5674472\n    },\n    \"SK\": {\n        \"size\": 49034,\n        \"population\": 5492677\n    },\n    \"SI\": {\n        \"size\": 20273,\n        \"population\": 1988292\n    },\n    \"SB\": {\n        \"size\": 28400,\n        \"population\": 609883\n    },\n    \"SO\": {\n        \"size\": 637657,\n        \"population\": 15636171\n    },\n    \"ZA\": {\n        \"size\": 1219090,\n        \"population\": 58065097\n    },\n    \"SS\": {\n        \"size\": 619745,\n        \"population\": 12530717\n    },\n    \"ES\": {\n        \"size\": 504842,\n        \"population\": 47737941\n    },\n    \"LK\": {\n        \"size\": 65610,\n        \"population\": 22053488\n    },\n    \"SD\": {\n        \"size\": 2505810,\n        \"population\": 36729501\n    },\n    \"SR\": {\n        \"size\": 163820,\n        \"population\": 573311\n    },\n    \"SJ\": {\n        \"size\": 61606,\n        \"population\": 1872\n    },\n    \"SZ\": {\n        \"size\": 17363,\n        \"population\": 1451428\n    },\n    \"SE\": {\n        \"size\": 449965,\n        \"population\": 9723809\n    },\n    \"CH\": {\n        \"size\": 41285,\n        \"population\": 8061516\n    },\n    \"SY\": {\n        \"size\": 185180,\n        \"population\": 18499181\n    },\n    \"TW\": {\n        \"size\": 36175,\n        \"population\": 23415126\n    },\n    \"TJ\": {\n        \"size\": 143100,\n        \"population\": 8191958\n    },\n    \"TZ\": {\n        \"size\": 945088,\n        \"population\": 52482726\n    },\n    \"TH\": {\n        \"size\": 513115,\n        \"population\": 67976405\n    },\n    \"TG\": {\n        \"size\": 56785,\n        \"population\": 7756937\n    },\n    \"TK\": {\n        \"size\": 10,\n        \"population\": 1337\n    },\n    \"TO\": {\n        \"size\": 651,\n        \"population\": 106440\n    },\n    \"TT\": {\n        \"size\": 5128,\n        \"population\": 1223916\n    },\n    \"TN\": {\n        \"size\": 163610,\n        \"population\": 11134588\n    },\n    \"TR\": {\n        \"size\": 773473,\n        \"population\": 81619392\n    },\n    \"TM\": {\n        \"size\": 488100,\n        \"population\": 5231422\n    },\n    \"TC\": {\n        \"size\": 497,\n        \"population\": 49070\n    },\n    \"TV\": {\n        \"size\": 26,\n        \"population\": 10782\n    },\n    \"UG\": {\n        \"size\": 242554,\n        \"population\": 38319241\n    },\n    \"UA\": {\n        \"size\": 603628,\n        \"population\": 44291413\n    },\n    \"AE\": {\n        \"size\": 77700,\n        \"population\": 9682088\n    },\n    \"UK\": {\n        \"size\": 244140,\n        \"population\": 66573504\n    },\n    \"GB\": {\n        \"size\": 244140,\n        \"population\": 66573504\n    },\n    \"US\": {\n        \"size\": 9629047,\n        \"population\": 331002651\n    },\n    \"UY\": {\n        \"size\": 175016,\n        \"population\": 3332972\n    },\n    \"UZ\": {\n        \"size\": 447400,\n        \"population\": 29199942\n    },\n    \"VU\": {\n        \"size\": 12190,\n        \"population\": 266937\n    },\n    \"VA\": {\n        \"size\": 1,\n        \"population\": 842\n    },\n    \"VE\": {\n        \"size\": 916445,\n        \"population\": 26457369\n    },\n    \"VN\": {\n        \"size\": 332378,\n        \"population\": 96491146\n    },\n    \"VI\": {\n        \"size\": 352,\n        \"population\": 104170\n    },\n    \"WF\": {\n        \"size\": 274,\n        \"population\": 15561\n    },\n    \"YE\": {\n        \"size\": 528076,\n        \"population\": 29579986\n    },\n    \"ZM\": {\n        \"size\": 752614,\n        \"population\": 18137369\n    },\n    \"ZW\": {\n        \"size\": 390784,\n        \"population\": 17297495\n    }\n}","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { getCountries } from '../../api/covid19api';\nimport { CountryDto } from '../../api/dto';\nimport { countryPopulations } from '../../data/countryPopulations';\n\nexport interface Country {\n    name: string;\n    isoCode: string;\n    slug: string;\n    population: number | undefined\n}\n\ninterface CountryState {\n    countries: Country[];\n    loading: 'idle' | 'pending' | 'failed' | 'succeeded';\n}\n\nconst initialState: CountryState = {\n    countries: [],\n    loading: 'idle'\n};\n\nexport const fetchCountries = createAsyncThunk(\n    'countries/fetchCountries',\n    async () => (await getCountries()).data\n);\n\nconst slice = createSlice({\n    name: 'countries',\n    initialState: initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(fetchCountries.pending, (state: CountryState,) => ({\n            ...state,\n            countries: [],\n            loading: 'pending',\n        }));\n        builder.addCase(fetchCountries.fulfilled, (state: CountryState, action: PayloadAction<CountryDto[]>) => ({\n            ...state,\n            countries: action.payload.map(dto => ({\n                name: dto.Country,\n                isoCode: dto.ISO2,\n                slug: dto.Slug,\n                population: countryPopulations[dto.ISO2]?.population\n            })),\n            loading: 'succeeded'\n        }));\n        builder.addCase(fetchCountries.rejected, (state: CountryState,) => ({\n            ...state,\n            loading: 'failed'\n        }));\n    }\n});\n\nexport const countriesReducer = slice.reducer;\nexport const { actions } = slice;","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { getCountryDays } from '../../api/covid19api';\nimport { DayOneCountryDto } from '../../api/dto';\nimport * as _ from 'lodash';\n\nexport interface CountryDays {\n    days: CountryDay[],\n    totalCases: number,\n    totalDeaths: number\n}\n\nexport interface CountryDay {\n    totalCases: number;\n    totalDeaths: number;\n    dateTime: string;\n    newCases: number;\n    newDeaths: number;\n}\n\ninterface CountryDaysState {\n    [slug: string]: CountryDays;\n}\n\ninterface CountryDaysResponse {\n    slug: string,\n    dtos: DayOneCountryDto[]\n}\n\nconst initialState: CountryDaysState = {};\n\nexport const fetchCountryDays = createAsyncThunk<CountryDaysResponse, string>(\n    'countryDays/fetchCountryDays',\n    async (slug: string) => ({\n        slug: slug,\n        dtos: (await getCountryDays(slug)).data\n    })\n);\n\nconst dayOneCountryDtoAdapter: (dto: DayOneCountryDto) => CountryDay = (dto) => ({\n    totalCases: dto.Confirmed,\n    totalDeaths: dto.Deaths,\n    dateTime: dto.Date,\n    newCases: 0,\n    newDeaths: 0\n});\n\nconst countryDaysAdapter: (days: CountryDay[]) => CountryDay[] = (days) => {\n    if (days.length > 0) {\n        const withNews = _.zip(days, days.slice(1)).slice(0, -1).map(pair => {\n            const current: CountryDay = pair[1]!;\n            const prev: CountryDay = pair[0]!;\n            return ({\n                ...current, \n                newCases: current.totalCases - prev.totalCases,\n                newDeaths: current.totalDeaths - prev.totalDeaths\n            });\n        });\n        return [days[0], ...withNews];\n    } else {\n        return [];\n    }\n};\n\nconst slice = createSlice({\n    name: 'countryDays',\n    initialState: initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(fetchCountryDays.fulfilled, (state: CountryDaysState, action: PayloadAction<CountryDaysResponse>) => {\n            const days = countryDaysAdapter(action.payload.dtos.map(dayOneCountryDtoAdapter));\n            return {\n                ...state,\n                [action.payload.slug]: ({\n                    days: days,\n                    totalDeaths: days[days.length-1]?.totalDeaths ?? 0,\n                    totalCases: days[days.length-1]?.totalCases ?? 0\n                })\n            };\n        });\n    }\n});\n\nexport const countryDaysReducer = slice.reducer;\nexport const { actions } = slice;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Country } from '../countries/countries.slice';\n\nexport type SectorId = string\n\nexport interface Sector {\n    id: SectorId,\n    name: string,\n    population: number | undefined,\n    countries: Country[]\n}\n\ninterface SectorsState {\n    [sectorId: string]: Sector\n}\n\nconst initialState: SectorsState = {};\n\nconst slice = createSlice({\n    name: 'sectors',\n    initialState: initialState,\n    reducers: {\n        setSectors: (state: SectorsState, action: PayloadAction<Sector[]>) =>\n            action.payload.reduce((st: SectorsState, sector: Sector) => ({\n                ...st,\n                [sector.id]: sector\n            }),\n                state)\n    }\n});\n\nexport const sectorsReducer = slice.reducer;\nexport const { actions } = slice;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SectorId } from '../sectors/sectors.slice';\nimport { extendMoment, DateRange } from 'moment-range';\nimport moment from 'moment';\n\nexport interface SelectionState {\n    sectorIds: SectorId[],\n    comparisonMode: boolean,\n    normalize: boolean,\n    rangeFrom: string,\n    rangeTo: string\n}\n\nconst initialState: SelectionState = {\n    sectorIds: [],\n    comparisonMode: false,\n    normalize: false,\n    rangeFrom: moment('2020-01-01T00:00:00Z').toISOString(),\n    rangeTo: moment().toISOString()\n};\n\nconst slice = createSlice({\n    name: 'selection',\n    initialState: initialState,\n    reducers: {\n        selectSectors: (state: SelectionState, action: PayloadAction<SectorId[]>) => ({\n            ...state,\n            sectorIds: action.payload\n        }),\n        selectComparisonMode: (state: SelectionState, action: PayloadAction<boolean>) => ({\n            ...state,\n            comparisonMode: action.payload,\n            sectorIds: action.payload ? state.sectorIds : state.sectorIds.slice(0,1)\n        }),\n        selectNormalize: (state: SelectionState, action: PayloadAction<boolean>) => ({\n            ...state,\n            normalize: action.payload\n        }),\n        selectRange: (state: SelectionState, action: PayloadAction<DateRange>) => ({\n            ...state,\n            rangeFrom: action.payload.start.toISOString(),\n            rangeTo: action.payload.end.toISOString()\n        })\n    },\n});    \n\nexport const selectionReducer = slice.reducer;\nexport const { actions } = slice;","import { combineReducers } from '@reduxjs/toolkit';\nimport { countriesReducer } from './countries/countries.slice';\nimport { countryDaysReducer } from './countryDays/countryDays.slice';\nimport { sectorsReducer } from './sectors/sectors.slice';\nimport { selectionReducer } from './selection/selection.slice';\n\nconst rootReducer = combineReducers({\n  countries: countriesReducer,\n  countryDays: countryDaysReducer,\n  selection: selectionReducer,\n  sectors: sectorsReducer\n});\n\nexport default rootReducer; ","import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;","export interface Color {\n    cases: string,\n    deaths: string\n}\n\nexport const colors: Color[] = [\n    {\n        cases: '17,192,192',\n        deaths: '192,75,92'\n    },\n    {\n        cases: '245,130,48',\n        deaths: '128,0,0'\n    },\n    {\n        cases: '150,210,0',\n        deaths: '128,0,0'\n    },\n    {\n        cases: '10,90,188',\n        deaths: '0,0,128'\n    },\n    {\n        cases: '200,150,205',\n        deaths: '128,0,0'\n    },\n    {\n        cases: '128,128,0',\n        deaths: '128,0,0'\n    },\n    {\n        cases: '250,60,100',\n        deaths: '128,0,0'\n    }\n];","import _, { isNumber } from \"lodash\";\nimport moment from \"moment\";\nimport { CountryDay } from \"./store/countryDays/countryDays.slice\";\n\nexport interface DataSet {\n    label: string,\n    color: string,\n    dataPoints: DataPoint[]\n}\n\nexport interface DataPoint {\n    t: moment.Moment,\n    newCases: number,\n    newDeaths: number,\n    totalCases: number,\n    totalDeaths: number,\n    rollingCases: number | undefined,\n    rollingDeaths: number | undefined\n}\n\nexport const emptyDataPoint: (m: moment.Moment) => DataPoint = (t: moment.Moment) => ({\n    t: t,\n    newCases: 0,\n    newDeaths: 0,\n    totalCases: 0,\n    totalDeaths: 0,\n    rollingCases: undefined,\n    rollingDeaths: undefined\n});\n\nconst average = (xs: number[]) => xs.filter(x => isFinite(x)).reduce((a, b) => a + b, 0) / xs.length\n\nexport const toDataPoints: (roll: number, days: CountryDay[], normalizeBy: number) => DataPoint[] =\n    (roll: number, days: CountryDay[], normalizeBy: number) => {\n        let dataPoints: DataPoint[] = days.map(d => ({\n            t: moment(d.dateTime),\n            newCases: d.newCases * normalizeBy,\n            newDeaths: d.newDeaths * normalizeBy,\n            totalCases: d.totalCases * normalizeBy,\n            totalDeaths: d.totalDeaths * normalizeBy,\n            rollingCases: undefined,\n            rollingDeaths: undefined\n        }));\n\n        let daysByDate: Map<moment.Moment, DataPoint> = new Map(dataPoints.map(d => [d.t, d]));\n        let dates: moment.Moment[] = _.sortBy(Array.from(daysByDate.keys()), (m: moment.Moment) => m.valueOf())\n\n        return dates.map((m, i) => {\n            let currentDay: DataPoint = daysByDate.get(m) || emptyDataPoint(m);\n\n            let rollingDates = dates.slice(Math.max(i - Math.floor(roll / 2), 0), i + Math.ceil(roll / 2))\n\n            let rolling = (f: (t: DataPoint) => number) => {\n                let rollingValues = rollingDates.map(m => f(daysByDate.get(m) || emptyDataPoint(m)))\n                return average(rollingValues)\n            }\n\n            let rollingDefined = rollingDates.length === roll\n            let rollingCases = rollingDefined ? rolling(d => d.newCases) : undefined\n            let rollingDeaths = rollingDefined ? rolling(d => d.newDeaths) : undefined\n\n            return ({\n                ...currentDay,\n                rollingCases: rollingCases,\n                rollingDeaths: rollingDeaths\n            })\n        });\n    };","import React from 'react'\nimport { Line } from 'react-chartjs-2'\n\nexport interface ChartDataSet {\n    title: string,\n    values: (number | undefined)[],\n    color: string\n}\n\nexport interface CoronaChartProps {\n    title: string,\n    labels: string[],\n    datasets: ChartDataSet[]\n}\n\nexport class CoronaChart extends React.Component<CoronaChartProps> {\n    chartReference: React.RefObject<unknown>\n    \n    constructor(props: CoronaChartProps) {\n        super(props)\n        this.chartReference = React.createRef()\n    }\n\n    render() {\n        const data = {\n            labels: this.props.labels,\n            datasets: this.props.datasets.map(dataset => ({\n                label: dataset.title,\n                fill: false,\n                lineTension: 0.01,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: dataset.color,\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 0,\n                pointHitRadius: 10,\n                data: dataset.values\n            })),\n        }\n\n        const options = {\n            title: {\n                text: this.props.title,\n                display: true\n            },\n        }\n\n        return (<Line data={data} options={options}/>)\n    }\n}","import { Paper } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { colors, Color } from '../colors';\nimport { DataPoint, emptyDataPoint, toDataPoints } from '../createDataSet';\nimport { fetchCountries } from '../store/countries/countries.slice';\nimport { fetchCountryDays } from '../store/countryDays/countryDays.slice';\nimport { Sector } from '../store/sectors/sectors.slice';\nimport { AppDispatch, RootState } from '../store/store';\nimport './App.css';\nimport { ChartDataSet, CoronaChart } from './Chart';\nimport * as Moment from 'moment';\nimport { DateRange, extendMoment } from 'moment-range';\n\nconst moment = extendMoment(Moment);\n\ninterface DataChart {\n    title: string,\n    datasets: ChartDataSet[]\n}\n\nconst mapState = (state: RootState) => ({\n    countriesState: state.countries,\n    countryDaysState: state.countryDays,\n    selectionState: state.selection,\n    sectorsState: state.sectors\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    fetchCountries: () => dispatch(fetchCountries()),\n    fetchCountryDays: (slug: string) => dispatch(fetchCountryDays(slug))\n});\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\n\nconst toDateString = (moment: moment.Moment) => moment.format('YYYY-MM-DD');\n\nclass Charts extends Component<Props> {\n\n    private dateRange = () => new DateRange(moment(this.props.selectionState.rangeFrom), moment(this.props.selectionState.rangeTo));\n    private dates = () => Array.from(this.dateRange().by('day')).map(d => toDateString(d));\n\n    private createAllDataCharts(): DataChart[][] {\n        const roll = 7;\n\n        let sectors: Sector[] = this.props.selectionState.sectorIds\n            .map(sectorId => this.props.sectorsState[sectorId])\n            .filter(sector => sector !== undefined)\n\n        let dataCharts: DataChart[][] = sectors.map((sector, i) => {\n            let countryDays = this.props.countryDaysState[sector.countries[0].slug]; // TODO support \n            const population = sector.population\n            if (countryDays !== undefined && population !== undefined) {\n                let normalizeBy = this.props.selectionState.normalize ? 1e6 / population : 1\n                let dataPoints: Map<string, DataPoint> =\n                    new Map(toDataPoints(roll, countryDays.days, normalizeBy).map(dataPoint => [toDateString(dataPoint.t), dataPoint]))\n                return this.createDataCharts(sector.name, colors[i % colors.length], dataPoints)\n            } else {\n                return []\n            }\n        });\n\n        return dataCharts;\n    }\n\n    private createDataCharts(\n        title: string, color: Color, dataPoints: Map<string, DataPoint>): DataChart[] {\n\n        let dvs: (DataPoint | undefined)[] = this.dates().map(t => dataPoints.get(t))\n\n        if (this.props.selectionState.comparisonMode) {\n            return [\n                {\n                    title: `New Cases (rolling avg)`,\n                    datasets: [\n                        {\n                            title: title,\n                            color: `rgba(${color.cases},1)`,\n                            values: dvs.map(dv => dv?.rollingCases)\n                        }\n                    ]\n                },\n                {\n                    title: `New Deaths (rolling avg)`,\n                    datasets: [\n                        {\n                            title: title,\n                            color: `rgba(${color.cases},1)`,\n                            values: dvs.map(dv => dv?.rollingDeaths)\n                        }\n                    ]\n                },\n                {\n                    title: `Total Cases`,\n                    datasets: [\n                        {\n                            title: title,\n                            color: `rgba(${color.cases},1)`,\n                            values: dvs.map(dv => dv?.totalCases)\n                        }\n                    ]\n                },\n                {\n                    title: `Total Deaths`,\n                    datasets: [\n                        {\n                            title: title,\n                            color: `rgba(${color.cases},1)`,\n                            values: dvs.map(dv => dv?.totalDeaths)\n                        }\n                    ]\n                }\n            ]\n        } else {\n            return [\n                {\n                    title: `${title}: New Cases and Deaths`,\n                    datasets:\n                        [\n                            {\n                                title: `New Cases`,\n                                color: `rgba(${color.cases},0.2)`,\n                                values: dvs.map(dv => dv?.newCases)\n                            },\n                            {\n                                title: `New Cases (rolling avg)`,\n                                color: `rgba(${color.cases},1)`,\n                                values: dvs.map(dv => dv?.rollingCases)\n                            },\n                            {\n                                title: `New Deaths`,\n                                color: `rgba(${color.deaths},0.2)`,\n                                values: dvs.map(dv => dv?.newDeaths)\n                            },\n                            {\n                                title: `New Deaths (rolling avg)`,\n                                color: `rgba(${color.deaths},1)`,\n                                values: dvs.map(dv => dv?.rollingDeaths)\n                            }\n                        ]\n                },\n                {\n                    title: `${title}: Total Cases and Deaths`,\n                    datasets: [\n                        {\n                            title: `Total Cases`,\n                            color: `rgba(${color.cases},1)`,\n                            values: dvs.map(dv => dv?.totalCases)\n                        },\n                        {\n                            title: `Total Deaths`,\n                            color: `rgba(${color.deaths},1)`,\n                            values: dvs.map(dv => dv?.totalDeaths)\n                        }\n                    ]\n                }\n            ];\n        }\n    }\n\n    render() {\n        let allCharts = this.createAllDataCharts()\n        let numberOfCharts = allCharts.length > 0 ? Math.min(...allCharts.map(s => s.length)) : 0\n        return (\n            <Paper elevation={2}>\n                {Array.from(Array(numberOfCharts).keys()).map(i =>\n                    <CoronaChart\n                        key={i}\n                        title={allCharts[0][i].title}\n                        labels={this.dates().map(t => t.toLocaleString())}\n                        datasets={allCharts.map(dc => dc[i].datasets).flat()}\n                    />\n                )}\n            </Paper>\n        )\n    }\n};\n\nexport default connector(Charts);","import React, { Component } from 'react';\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Country, fetchCountries } from '../store/countries/countries.slice';\nimport { fetchCountryDays } from '../store/countryDays/countryDays.slice';\nimport { AppDispatch, RootState } from '../store/store';\nimport * as _ from 'lodash';\nimport { AppBar, Box, Checkbox, FormControl, FormControlLabel, InputLabel, MenuItem, Select, Toolbar } from '@material-ui/core';\nimport { actions as sectorsActions, Sector, SectorId } from '../store/sectors/sectors.slice';\nimport { actions as selectionActions } from '../store/selection/selection.slice';\nimport { DateRange } from 'moment-range';\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nconst COUNTRY_DAYS_DELAY = 250;\n\nconst mapState = (state: RootState) => ({\n    countriesState: state.countries,\n    countryDaysState: state.countryDays,\n    selectionState: state.selection,\n    sectorsState: state.sectors\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    fetchCountries: () => dispatch(fetchCountries()),\n    fetchCountryDays: (slug: string) => dispatch(fetchCountryDays(slug)),\n    setSectors: (sectors: Sector[]) => dispatch(sectorsActions.setSectors(sectors)),\n    selectSectors: (sectorIds: SectorId[]) => dispatch(selectionActions.selectSectors(sectorIds)),\n    selectNormalize: (normalize: boolean) => dispatch(selectionActions.selectNormalize(normalize)),\n    selectComparisonMode: (comparisonMode: boolean) => dispatch(selectionActions.selectComparisonMode(comparisonMode)),\n    selectRange: (range: DateRange) => dispatch(selectionActions.selectRange(range))\n});\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\n\nclass CountrySelect extends Component<Props> {\n    loadCountriesDays() {\n        let countries: Country[] = this.props.selectionState.sectorIds.flatMap(sectorId => this.props.sectorsState[sectorId]?.countries)\n        let notLoadedCountry: Country | undefined = _.shuffle(countries).find(country => this.props.countryDaysState[country.slug] === undefined)\n        if (notLoadedCountry !== undefined) {\n            this.props.fetchCountryDays(notLoadedCountry.slug)\n                .then(() => setTimeout(() => this.loadCountriesDays(), COUNTRY_DAYS_DELAY))\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.selectionState.sectorIds !== this.props.selectionState.sectorIds) {\n            this.loadCountriesDays()\n        }\n    }\n\n    createSectors() {\n        const sectors: Sector[] = this.props.countriesState.countries.map(c => ({\n            id: c.isoCode,\n            name: c.name,\n            population: c.population,\n            countries: [c]\n        }))\n        this.props.setSectors(sectors)\n    }\n\n    loadSectors() {\n        this.props.fetchCountries()\n            .then(() => this.createSectors())\n    }\n\n    componentDidMount() {\n        this.loadSectors()\n    }\n\n    selectSectors(sectorIds: SectorId[]) {\n        this.props.selectSectors(sectorIds)\n    }\n\n    selectedSectorValue(): SectorId | SectorId[] {\n        return (this.props.selectionState.comparisonMode\n            ? this.props.selectionState.sectorIds\n            : this.props.selectionState.sectorIds[0]) ?? '';\n    }\n\n    sectorsValues(): Sector[] {\n        return _.sortBy(Object.values(this.props.sectorsState), ['name']);\n    }\n\n    getCurrentRange = () => new DateRange(moment(this.props.selectionState.rangeFrom), moment(this.props.selectionState.rangeTo))\n\n    render() {\n        return (\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <AppBar color=\"default\" position=\"sticky\">\n                    <Toolbar>\n                        <Box mr={4}>\n                            <FormControl>\n                                <InputLabel id=\"select-country\"></InputLabel>\n                                <Select\n                                    style={{ minWidth: 96 }}\n                                    multiple={this.props.selectionState.comparisonMode}\n                                    labelId=\"select-country\"\n                                    id=\"select-country\"\n                                    value={this.selectedSectorValue()}\n                                    onChange={(e) => {\n                                        if (this.props.selectionState.comparisonMode) {\n                                            this.selectSectors(e.target.value as string[])\n                                        } else {\n                                            this.selectSectors([e.target.value as string])\n                                        }\n                                    }}\n                                >\n                                    {this.sectorsValues().map(sector =>\n                                        <MenuItem key={sector.id} value={sector.id}>{sector.name}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        <Box>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        disabled={false}\n                                        checked={this.props.selectionState.normalize}\n                                        onChange={(e) => this.props.selectNormalize(e.target.checked)}\n                                        name=\"normalized\"\n                                        color=\"primary\"\n                                    />}\n                                label=\"Per 1M Population\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        disabled={false}\n                                        checked={this.props.selectionState.comparisonMode}\n                                        onChange={(e) => this.props.selectComparisonMode(e.target.checked)}\n                                        name=\"enableMultiple\"\n                                        color=\"primary\"\n                                    />}\n                                label=\"Comparison Mode\"\n                            />\n                        </Box>\n                        <Box>\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"yyyy-MM-DD\"\n                                margin=\"normal\"\n                                id=\"from-picker\"\n                                label=\"From Date\"\n                                value={moment(this.props.selectionState.rangeFrom).toDate()}\n                                onChange={(date) => {\n                                    const currentRange = this.getCurrentRange()\n                                    this.props.selectRange(new DateRange(moment.min(moment(date), currentRange.end), currentRange.end));\n                                }}\n                            />\n                        </Box>\n                        <Box>\n                            <KeyboardDatePicker\n                                disableToolbar\n                                variant=\"inline\"\n                                format=\"yyyy-MM-DD\"\n                                margin=\"normal\"\n                                id=\"to-picker\"\n                                label=\"To Date\"\n                                value={moment(this.props.selectionState.rangeTo).toDate()}\n                                onChange={(date) => {\n                                    const currentRange = this.getCurrentRange()\n                                    this.props.selectRange(new DateRange(currentRange.start, moment.max(moment(date), currentRange.start)));\n                                }}\n                            />\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n\nexport default connector(CountrySelect);","import { Box, Container } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { fetchCountries } from '../store/countries/countries.slice';\nimport { fetchCountryDays } from '../store/countryDays/countryDays.slice';\nimport { AppDispatch, RootState } from '../store/store';\nimport './App.css';\nimport Charts from './Charts';\nimport SelectBar from './SelectBar';\n\nconst mapState = (state: RootState) => ({\n    countriesState: state.countries,\n    countryDaysState: state.countryDays\n});\n\nconst mapDispatch = (dispatch: AppDispatch) => ({\n    fetchCountries: () => dispatch(fetchCountries()),\n    fetchCountryDays: (slug: string) => dispatch(fetchCountryDays(slug))\n});\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\n\nclass App extends Component<Props> {\n\n    render() {\n        return (\n            <Container maxWidth=\"xl\">\n                <SelectBar></SelectBar>\n                <Box marginTop={4}>\n                <Charts/>\n                </Box>\n            </Container>\n        )\n    }\n};\n\nexport default connector(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport App from './components/App';\n\nfunction renderApp() {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}